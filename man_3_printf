.TH _PRINTF 3 "DATE" "VERSION"
.SH NAME
_printf \- Custom implementation of the printf function
.SH SYNOPSIS
#include "main.h"
.sp
int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function is a custom implementation of the standard printf function. It is designed to mimic the functionality of printf from the standard library, providing formatted output conversion.
.P
The function writes output to stdout, the standard output stream, formatting it according to the format string pointed to by 'format'.
.P
The 'format' string can contain format specifiers, which are replaced by the values specified in subsequent additional arguments and formatted as requested.
.P
Supported format specifiers:
.IP %c
Prints a single character.
.IP %s
Prints a string.
.IP %d, %i
Prints a signed integer.
.IP %o
Prints an unsigned integer in octal format.
.IP %x, %X
Prints an unsigned integer in hexadecimal format (lowercase/uppercase).
.IP %u
Prints an unsigned integer.
.IP %p
Prints a pointer address.
.IP %%
Prints a percent sign.
.SH USAGE
.PP
.B int main() {
.RS
.B _printf("Character: %c\\n", 'A');
.BR _printf("String: %s\\n", "Hello, World!");
.BR _printf("Integer: %d\\n", 123);
.RE
.BR return 0;
.RE
.SH RETURN VALUE
Returns the number of characters printed (excluding the null byte used to end output to strings).
.SH NOTES
.PP
The function does not currently support all standard format specifiers and flags of the standard printf function. Future versions may extend this functionality.
.P
If memory allocation fails in helper functions (like inToString), the function may not print the expected output.
.SH SEE ALSO
.BR printf(3),
.BR sprintf(3),
.BR fprintf(3)
.SH AUTHOR
Norman Colon

